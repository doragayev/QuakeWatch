# Default values for monitoring chart
# This is a YAML-formatted file.

# Global settings
global:
  namespace: monitoring

# Kube-prometheus-stack configuration
kube-prometheus-stack:
  enabled: true
  
  # Prometheus configuration
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      retention: 15d
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi
  
  # Grafana configuration
  grafana:
    enabled: true
    adminPassword: prom-operator
    persistence:
      enabled: true
      storageClassName: standard
      size: 10Gi
    service:
      type: ClusterIP
      port: 80
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'quakewatch'
          orgId: 1
          folder: 'QuakeWatch'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/quakewatch
    dashboards:
      quakewatch:
        quakewatch-application:
          gnetId: null
          revision: null
          datasource: Prometheus
          url: https://raw.githubusercontent.com/doragayev/quakewatch/main/monitoring/grafana-dashboards/quakewatch-application-dashboard.json
        cluster-health:
          gnetId: null
          revision: null
          datasource: Prometheus
          url: https://raw.githubusercontent.com/doragayev/quakewatch/main/monitoring/grafana-dashboards/cluster-health-dashboard.json
        system-overview:
          gnetId: null
          revision: null
          datasource: Prometheus
          url: https://raw.githubusercontent.com/doragayev/quakewatch/main/monitoring/grafana-dashboards/system-overview-dashboard.json
  
  # AlertManager configuration
  alertmanager:
    enabled: true
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 10Gi
    config:
      global:
        smtp_smarthost: 'localhost:587'
        smtp_from: 'alerts@quakewatch.local'
      route:
        group_by: ['alertname', 'cluster', 'service']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: 'web.hook'
        routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
          group_wait: 5s
          repeat_interval: 5m
        - match:
            severity: warning
          receiver: 'warning-alerts'
          group_wait: 30s
          repeat_interval: 30m
        - match:
            service: quakewatch
          receiver: 'quakewatch-alerts'
          group_wait: 10s
          repeat_interval: 15m
      receivers:
      - name: 'web.hook'
        webhook_configs:
        - url: 'http://localhost:5001/'
          send_resolved: true
      - name: 'critical-alerts'
        webhook_configs:
        - url: 'http://localhost:5001/critical'
          send_resolved: true
        email_configs:
        - to: 'admin@quakewatch.local'
          subject: 'CRITICAL ALERT: {{ .GroupLabels.alertname }}'
          body: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Severity: {{ .Labels.severity }}
            Service: {{ .Labels.service }}
            Time: {{ .StartsAt }}
            {{ end }}
      - name: 'warning-alerts'
        webhook_configs:
        - url: 'http://localhost:5001/warning'
          send_resolved: true
        email_configs:
        - to: 'admin@quakewatch.local'
          subject: 'WARNING: {{ .GroupLabels.alertname }}'
          body: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Severity: {{ .Labels.severity }}
            Service: {{ .Labels.service }}
            Time: {{ .StartsAt }}
            {{ end }}
      - name: 'quakewatch-alerts'
        webhook_configs:
        - url: 'http://localhost:5001/quakewatch'
          send_resolved: true
        email_configs:
        - to: 'quakewatch-team@quakewatch.local'
          subject: 'QuakeWatch Alert: {{ .GroupLabels.alertname }}'
          body: |
            {{ range .Alerts }}
            Alert: {{ .Annotations.summary }}
            Description: {{ .Annotations.description }}
            Severity: {{ .Labels.severity }}
            Service: {{ .Labels.service }}
            Time: {{ .StartsAt }}
            Runbook: {{ .Annotations.runbook_url }}
            {{ end }}
      inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'cluster', 'service']

# Custom Prometheus rules
prometheusRules:
  enabled: true
  rules:
    quakewatch:
      groups:
      - name: quakewatch.rules
        rules:
        - alert: QuakeWatchDown
          expr: up{job="quakewatch"} == 0
          for: 1m
          labels:
            severity: critical
            service: quakewatch
          annotations:
            summary: "QuakeWatch application is down"
            description: "QuakeWatch has been down for more than 1 minute"
            runbook_url: "https://docs.example.com/runbooks/quakewatch-down"
        
        - alert: QuakeWatchHighErrorRate
          expr: rate(quakewatch_errors_total[5m]) > 0.1
          for: 2m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch high error rate detected"
            description: "Error rate is {{ $value }} errors/sec for more than 2 minutes"
        
        - alert: QuakeWatchHighResponseTime
          expr: histogram_quantile(0.95, rate(quakewatch_request_duration_seconds_bucket[5m])) > 5
          for: 3m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch high response time"
            description: "95th percentile response time is {{ $value }}s for more than 3 minutes"
        
        - alert: QuakeWatchNoRequests
          expr: rate(quakewatch_requests_total[10m]) == 0
          for: 5m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch receiving no requests"
            description: "No requests received for more than 10 minutes"
        
        - alert: QuakeWatchHighMemoryUsage
          expr: (process_resident_memory_bytes{job="quakewatch"} / 1024 / 1024) > 500
          for: 5m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch high memory usage"
            description: "Memory usage is {{ $value }}MB for more than 5 minutes"
        
        - alert: QuakeWatchHighCPUUsage
          expr: rate(process_cpu_seconds_total{job="quakewatch"}[5m]) > 0.8
          for: 5m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch high CPU usage"
            description: "CPU usage is {{ $value }} for more than 5 minutes"
        
        - alert: QuakeWatchEarthquakeProcessingStopped
          expr: rate(quakewatch_earthquakes_total[10m]) == 0
          for: 10m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch earthquake processing stopped"
            description: "No earthquakes have been processed for more than 10 minutes"
        
        - alert: QuakeWatchHighEarthquakeVolume
          expr: rate(quakewatch_earthquakes_total[5m]) > 10
          for: 2m
          labels:
            severity: info
            service: quakewatch
          annotations:
            summary: "QuakeWatch high earthquake volume"
            description: "High volume of earthquakes being processed: {{ $value }} earthquakes/sec"
        
        - alert: QuakeWatchAPICallFailure
          expr: rate(quakewatch_api_calls_total{api_name!=""}[5m]) == 0
          for: 5m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch API calls stopped"
            description: "No API calls have been made for more than 5 minutes"
        
        - alert: QuakeWatchDataProcessingStopped
          expr: rate(quakewatch_data_points_processed_total[10m]) == 0
          for: 10m
          labels:
            severity: warning
            service: quakewatch
          annotations:
            summary: "QuakeWatch data processing stopped"
            description: "No data points have been processed for more than 10 minutes"

# ServiceMonitor for QuakeWatch
serviceMonitor:
  enabled: true
  labels:
    release: monitoring
  spec:
    selector:
      matchLabels:
        app: quakewatch
    endpoints:
    - port: http
      path: /metrics
      interval: 15s

# Resource limits
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}
